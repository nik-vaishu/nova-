#CMT FOR MA'AM.. TO RUN THE EPROJECT WE HAVE TO GO FOR AND INSTALL PIP'S ON TERMINAL ON CODE SOFTWARE... THIS PROGR IS MADE BY USING VS CODE...!
import os
import datetime
import webbrowser
import pyttsx3
import speech_recognition as sr
import requests

engine = pyttsx3.init()

# CONVERSATATION SECTION##########################################3
def speak(text):
    engine.say(text)
    engine.runAndWait()

# Function to recognize speech
def recognize_speech():
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source, duration=1)
        audio = recognizer.listen(source)
    try:
        print("Recognizing...")
        query = recognizer.recognize_google(audio, language='en-in')
        print(f"User said: {query}\n")
    except Exception as e:
        print("Sorry, I couldn't understand. Please say that again.")
        return "None"
    return query.lower()

# Function to set an alarm
def set_alarm(alarm_time):
    while True:
        current_time = datetime.datetime.now().strftime("%H:%M")
        if current_time == alarm_time:
            speak("Wake up! It's time!")
            break

# Placeholder for API key############################################
API_KEY = "YOUR_API_KEY_HERE"

# Main function to handle user commands
# THE QUESTION ANS SIGHT ANSWER PLACE IS LEFT BLANK FOR US TO WRITE OUR OWN SIGHT#####
  
def main():
    speak("Hello, I am NOVA+. How can I assist you today?Sir/Ma'am")
    while True:
        query = recognize_speech()
        if 'alarm' in query:
            speak("At what time you want to set the alarm?")
            alarm_time = recognize_speech()
            set_alarm(alarm_time)
        elif '________#question#______' in query:
            speak("Sight Answer_____")
        elif '________#question#______' in query:
            speak("Sight Answer_____")
        elif '________#question#______' in query:
            speak("Sight Answer_____")
        elif '________#question#______' in query:
            speak("Sight Answer_____")
        elif 'stop' in query:
            speak("Goodbye!")
            break
        else:
            # Handle personal queries here
            speak("Sorry, I'm not programmed to handle that yet. ")

if __name__ == "__main__":
    main()
=====================================================================================================================================================================================================================
                               ##### CMT FOR MA'AM..... I ASKED CHAT GPT THAT IF I REPLACE THE API SECTION WITH ACTUAL API KEY SO IT GAVE ME THIS ANSWER"No.

      After replacing "YOUR_API_KEY_HERE" with your actual API key and providing actual questions and answers, the code still won't work as expected.
      It requires further implementation to handle the user's queries and integrate with any APIs or functionalities you desire.".. 
      SO I WANT TO KNOW THAT WHAT DOES IT MEANS?? AND HOW I CAN CORRECT IT?
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# ANOTHER CMT FOR MA;AM... SO IS THERE ANY WAY TO DECREASE THE RESPONCE TIME ?
===================================================================================================================================================================================================================
#another cmt for ma'am that I want to program my Nova so that it can respond to different but related questions with the same answer.........
 For example, if I say 'alarm', 'set alarm', or 'I want to set alarm', Nova should understand all the commands, but the response should be the same: 'Yes, for what time?'"
===================================================================================================================================================================================================================

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx D  O   N    E xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
